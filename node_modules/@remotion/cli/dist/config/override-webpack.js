"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.overrideWebpackConfig = exports.getWebpackOverrideFn = exports.defaultOverrideFunction = void 0;
const defaultOverrideFunction = (config) => config;
exports.defaultOverrideFunction = defaultOverrideFunction;
let overrideFn = exports.defaultOverrideFunction;
const getWebpackOverrideFn = () => {
    return overrideFn;
};
exports.getWebpackOverrideFn = getWebpackOverrideFn;
//	to warn the user if overrideWebpackConfig is invoked more than once
let invocations = 0;
const overrideWebpackConfig = (fn) => {
    if (invocations > 0) {
        const err = [
            'You specified the Config.overrideWebpackConfig() multiple times, which is not supported.',
            'Combine all Webpack overrides into a single one.',
            'You can curry multiple overrides:',
            '',
            'Instead of:',
            '',
            '  Config.overrideWebpackConfig((currentConfiguration) => {',
            '    return enableScss(currentConfiguration);',
            '  });',
            '  Config.overrideWebpackConfig((currentConfiguration) => {',
            '    return enableTailwind(currentConfiguration);',
            '  });',
            '',
            'Do this:',
            '',
            '  Config.overrideWebpackConfig((currentConfiguration) => {',
            '    return enableScss(enableTailwind(currentConfiguration));',
            '  });',
            '',
            'Read more: https://www.remotion.dev/docs/config#overridewebpackconfig',
        ];
        throw new Error(err.join('\n'));
    }
    invocations++;
    overrideFn = fn;
};
exports.overrideWebpackConfig = overrideWebpackConfig;
